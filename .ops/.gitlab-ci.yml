stages:
  - build-package
  - build-image
  - deploy

variables:
  APP_NAME: "x1-community"
  APP_VERSION: "1.0"
  BACKEND_PACKAGE_NAME: "${APP_NAME}-backend-${APP_VERSION}-SNAPSHOT.jar"
  FRONTEND_IMAGE_NAME: "registry.talos.basic.ai/basicai/${APP_NAME}/frontend"
  BACKEND_IMAGE_NAME: "registry.talos.basic.ai/basicai/${APP_NAME}/backend"
  KUBERNETES_NAMESPACE: "x1-community"

build-backend-package:
  stage: build-package
  tags:
    - openjdk-11
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "test" || $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_TAG =~ /^v/
      changes:
        - .ops/**/*
        - backend/**/*
  variables:
    MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/backend/.m2/repository"
    MAVEN_ARGS: "--batch-mode"
  script:
    - cd backend
    - mvn $MAVEN_ARGS package
  artifacts:
    paths:
      - backend/target/*.jar
  cache:
    paths:
      - backend/.m2/repository

build-backend-image:
  stage: build-image
  tags:
    - docker
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "test" || $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_TAG =~ /^v/
      changes:
        - .ops/**/*
        - backend/**/*
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  services:
    - docker:20-dind
  before_script:
    - until docker info; do sleep 1; done
    - echo "$BASICAI_REGISTRY_PASS" | docker login $BASICAI_REGISTRY --username $BASICAI_REGISTRY_USER --password-stdin
  script:
    - cd backend
    - cp ../.ops/backend.dockerfile ./Dockerfile
    - sed -i 's/$BACKEND_PACKAGE_NAME/'"$BACKEND_PACKAGE_NAME"'/g' Dockerfile
    - docker pull $BACKEND_IMAGE_NAME:latest || true
    - docker build --cache-from $BACKEND_IMAGE_NAME:latest -t $BACKEND_IMAGE_NAME:$CI_COMMIT_REF_NAME -t $BACKEND_IMAGE_NAME:$CI_COMMIT_SHORT_SHA -t $BACKEND_IMAGE_NAME:latest .
    - docker push $BACKEND_IMAGE_NAME:$CI_COMMIT_REF_NAME
    - docker push $BACKEND_IMAGE_NAME:$CI_COMMIT_SHORT_SHA
    - docker push $BACKEND_IMAGE_NAME:latest

.kubernetes-deploy:
  stage: deploy
  tags:
    - kubectl
  before_script:
    - cd .ops/$ENV
    - sed -i 's/$APP_VERSION/'"$APP_VERSION"'/g' deployment.yml
    - sed -i 's|$BACKEND_IMAGE_NAME|'"$BACKEND_IMAGE_NAME"'|g' deployment.yml
    - sed -i 's/$CI_COMMIT_SHORT_SHA/'"$CI_COMMIT_SHORT_SHA"'/g' deployment.yml

kubernetes-deploy-alidev:
  extends: .kubernetes-deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
  variables:
    ENV: alidev
  script:
    - kubectl apply -f deployment.yml -n $KUBERNETES_NAMESPACE --kubeconfig=$KUBECONFIG_ALIYUN_DEVELOPMENT

kubernetes-deploy-alitest:
  extends: .kubernetes-deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "test"
  variables:
    ENV: alitest
  script:
    - kubectl apply -f deployment.yml -n $KUBERNETES_NAMESPACE --kubeconfig=$KUBECONFIG_ALIYUN_TESTING
